from urllib.request import urlopen
from urllib.error import HTTPError
from urllib.parse import urlparse
from bs4 import BeautifulSoup
import re
import datetime
import random

pages = set()
random.seed(datetime.now())


def get_internal_links(bsObj, includeUrl):
    includeUrl = urlparse(includeUrl).scheme + "://" + urlparse(
        includeUrl).netloc
    internalLinks = []

    for link in bsObj.findAll("a",
        href=re.compile("^(\/|.*" + includeUrl + ")")):
        if link.attrs['href'] is not None:
            if link.attrs['href'] not in internalLinks:
                if link.attrs['href'].startswith("/"):
                    internalLinks.append(includeUrl+link.attrs['href'])
                else:
                    internalLinks.append(link.attrs['href'])
    return internalLinks

def get_external_links(bsObj, excludeUrl):
    externalLinks = []

    for link in bsObj.findAll("a",
        href=re.compile("^(http|www)((?!"+excludeUrl+").)*$")):
        if link.attrs['href'] is not None:
            if link.attrs['href'] is not in externalLinks:
                externalLinks.append(link.attrs['href'])

        return externalLinks
